%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot1.tex
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Fri Sep  7 12:33:21 2012
%%DocumentFonts: 
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext true def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot1.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (pkok)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Sep  7 12:33:21 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
LCb setrgbcolor
1497 950 M
88 0 V
8839 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 2358 M
88 0 V
8839 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 3766 M
88 0 V
8839 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 5175 M
88 0 V
8839 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 6583 M
88 0 V
8839 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 7991 M
88 0 V
8839 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 950 M
0 88 V
0 6953 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
3282 950 M
0 88 V
0 6953 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
5068 950 M
0 88 V
0 6953 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
6853 950 M
0 88 V
0 6953 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
8639 950 M
0 88 V
0 6953 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
10424 950 M
0 88 V
0 6953 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
1497 7991 N
0 -7041 V
8927 0 V
0 7041 V
-8927 0 V
Z stroke
1.000 UP
0.500 UL
LTb
1.000 UP
0.500 UL
LT0
LC0 setrgbcolor
1.00 0.00 0.00 C 8864 4995 Pls
6055 5565 Pls
9201 5592 Pls
5379 5162 Pls
9649 3545 Pls
7578 5177 Pls
3761 2834 Pls
4735 4631 Pls
5583 4596 Pls
6889 5405 Pls
5136 4707 Pls
7996 5086 Pls
6434 5452 Pls
4548 5042 Pls
6976 5045 Pls
5351 5624 Pls
6630 6688 Pls
4960 3837 Pls
6055 5010 Pls
8160 5202 Pls
6722 5863 Pls
9165 3841 Pls
8374 5335 Pls
4783 4956 Pls
5630 3554 Pls
6752 4993 Pls
8422 5492 Pls
8667 3641 Pls
6213 6181 Pls
4609 5036 Pls
4336 3307 Pls
9565 3661 Pls
6807 6346 Pls
9109 3942 Pls
4524 3994 Pls
5325 4837 Pls
8504 4795 Pls
6400 5421 Pls
4523 5294 Pls
4554 4529 Pls
6508 4994 Pls
8761 6036 Pls
5599 5738 Pls
7979 5015 Pls
9891 2455 Pls
6357 4314 Pls
8893 3433 Pls
8406 4903 Pls
9004 4860 Pls
5862 5874 Pls
6320 6230 Pls
6330 5374 Pls
8491 5223 Pls
5315 4700 Pls
6361 5016 Pls
6228 6120 Pls
7159 5216 Pls
7659 4494 Pls
3938 3801 Pls
8097 5224 Pls
6694 5202 Pls
6889 5679 Pls
7384 4676 Pls
8270 4063 Pls
7458 5249 Pls
5170 3067 Pls
5543 4800 Pls
4608 4062 Pls
7724 4823 Pls
8187 4373 Pls
6091 4101 Pls
5119 4287 Pls
6535 4675 Pls
6021 6157 Pls
7217 5660 Pls
6039 5567 Pls
8755 4762 Pls
7690 4621 Pls
9980 3210 Pls
7997 4675 Pls
6355 6037 Pls
5947 4905 Pls
6069 4441 Pls
7398 4689 Pls
6087 5602 Pls
9296 4722 Pls
5206 3029 Pls
8280 5216 Pls
8594 4636 Pls
6857 5038 Pls
4912 5681 Pls
5830 4463 Pls
5806 4656 Pls
8461 3374 Pls
6859 5781 Pls
8492 4148 Pls
8618 5163 Pls
5858 4247 Pls
6151 4631 Pls
7906 5435 Pls
5825 4734 Pls
4749 4460 Pls
5471 5668 Pls
9522 4961 Pls
4323 4478 Pls
7554 5236 Pls
7393 5142 Pls
7277 5132 Pls
3678 3267 Pls
6843 4119 Pls
7235 5611 Pls
5255 3786 Pls
4649 3489 Pls
4432 5513 Pls
4471 5850 Pls
8390 4874 Pls
4737 4728 Pls
4898 4037 Pls
6072 4647 Pls
8261 4300 Pls
5874 4680 Pls
4528 3885 Pls
9298 3256 Pls
5339 3515 Pls
9201 1344 Pls
7523 4451 Pls
4981 4660 Pls
8903 4117 Pls
5779 5404 Pls
4510 3447 Pls
5065 5414 Pls
4471 4134 Pls
7197 4489 Pls
5274 6338 Pls
8423 4942 Pls
5202 3692 Pls
6176 4409 Pls
9988 3343 Pls
6913 4996 Pls
9159 3318 Pls
4442 4410 Pls
5735 4509 Pls
9607 5991 Pls
9339 4113 Pls
9205 3966 Pls
7317 4361 Pls
4914 3992 Pls
7098 4474 Pls
6362 5517 Pls
5904 5462 Pls
8465 5631 Pls
5188 4823 Pls
7348 5541 Pls
8206 5038 Pls
5396 4644 Pls
8091 4939 Pls
8938 3452 Pls
6211 5295 Pls
4001 5765 Pls
6515 5633 Pls
8686 4626 Pls
5291 5153 Pls
6714 5154 Pls
4867 4107 Pls
8814 3723 Pls
8069 4984 Pls
9441 3157 Pls
4509 5127 Pls
7602 4601 Pls
8842 5242 Pls
4242 4598 Pls
8735 4881 Pls
5198 5504 Pls
9067 3708 Pls
4373 3712 Pls
5974 5313 Pls
7265 4159 Pls
8921 3159 Pls
6843 5941 Pls
4273 4968 Pls
7534 5191 Pls
8660 4515 Pls
6816 4944 Pls
8897 4754 Pls
6356 3673 Pls
6136 4672 Pls
7928 5694 Pls
7767 6120 Pls
7049 5627 Pls
8541 3399 Pls
5888 5223 Pls
5695 4255 Pls
5195 3644 Pls
7241 5740 Pls
4711 5590 Pls
9568 2336 Pls
7985 5221 Pls
8951 5463 Pls
7042 5973 Pls
8233 4793 Pls
8972 3169 Pls
7216 5775 Pls
5375 4181 Pls
8034 4217 Pls
8724 2870 Pls
8406 3280 Pls
4486 4267 Pls
5403 5536 Pls
6017 5537 Pls
6677 4949 Pls
6276 5024 Pls
6201 5039 Pls
5873 5829 Pls
5753 4767 Pls
5447 4731 Pls
8438 4590 Pls
9355 3144 Pls
7117 5526 Pls
9687 2810 Pls
7286 6049 Pls
5445 3929 Pls
4311 4357 Pls
5866 5136 Pls
4883 5799 Pls
4347 4057 Pls
8214 4622 Pls
8134 4530 Pls
8570 4526 Pls
10302 2802 Pls
4824 3808 Pls
4990 3379 Pls
4907 4184 Pls
7285 5546 Pls
8663 4617 Pls
6112 5067 Pls
6200 4385 Pls
8916 4929 Pls
8004 5942 Pls
5536 4389 Pls
5961 5062 Pls
7226 5428 Pls
4906 4912 Pls
9916 4474 Pls
5393 4379 Pls
4870 4104 Pls
8736 6004 Pls
7563 4201 Pls
4791 4571 Pls
6221 5154 Pls
7243 4953 Pls
4259 3574 Pls
5219 4447 Pls
7609 6333 Pls
6728 5035 Pls
7169 5239 Pls
5545 5592 Pls
7440 6257 Pls
3103 3358 Pls
7024 5564 Pls
8460 4559 Pls
7977 5542 Pls
9079 5013 Pls
8832 4330 Pls
4427 3721 Pls
7558 4582 Pls
8249 4244 Pls
8963 3945 Pls
9367 3255 Pls
4391 3855 Pls
5506 5948 Pls
7220 5155 Pls
8405 3157 Pls
5465 4627 Pls
4230 3990 Pls
4828 3926 Pls
4689 5229 Pls
8022 5219 Pls
8325 3419 Pls
9060 5702 Pls
5590 4540 Pls
5577 4682 Pls
4886 4887 Pls
6199 4406 Pls
6896 5940 Pls
5295 4622 Pls
5508 3923 Pls
4635 3795 Pls
7316 5366 Pls
5491 5548 Pls
5644 4893 Pls
9145 3502 Pls
7277 4424 Pls
6025 4595 Pls
6414 6377 Pls
8412 4939 Pls
6498 4052 Pls
4793 2757 Pls
6036 4501 Pls
7713 4610 Pls
8756 3960 Pls
7499 5027 Pls
6451 4801 Pls
7153 5331 Pls
5916 4293 Pls
5330 4590 Pls
4058 4387 Pls
8423 4409 Pls
8409 4255 Pls
6022 5100 Pls
8479 5013 Pls
6858 5610 Pls
5643 5551 Pls
5502 4200 Pls
4900 5404 Pls
7787 4965 Pls
4316 4702 Pls
5476 5681 Pls
9120 5464 Pls
6300 5230 Pls
4220 4870 Pls
6469 4083 Pls
8288 5405 Pls
9367 4730 Pls
4685 5995 Pls
8292 4381 Pls
7222 4508 Pls
9415 3766 Pls
4044 4053 Pls
6616 5568 Pls
4822 3751 Pls
5914 5059 Pls
6552 5828 Pls
5610 5993 Pls
6113 4691 Pls
8664 2968 Pls
8972 3933 Pls
9256 3450 Pls
6518 5037 Pls
5290 5349 Pls
6970 4937 Pls
7071 5598 Pls
7338 5481 Pls
6260 5282 Pls
7767 5275 Pls
7974 5260 Pls
5960 4939 Pls
4084 3764 Pls
7772 5442 Pls
5035 5382 Pls
4196 4957 Pls
8939 4114 Pls
5349 5268 Pls
8580 3798 Pls
7481 6086 Pls
7012 4188 Pls
8331 5323 Pls
7041 5723 Pls
5966 5245 Pls
7989 5163 Pls
6496 5049 Pls
8154 6167 Pls
8501 4089 Pls
6623 5982 Pls
3066 5024 Pls
9207 4854 Pls
5481 4400 Pls
5692 4631 Pls
7613 4722 Pls
6347 6489 Pls
7485 3833 Pls
9050 2942 Pls
6078 5358 Pls
9688 3638 Pls
9431 3948 Pls
8299 3634 Pls
4610 3737 Pls
5395 3210 Pls
6848 5211 Pls
6840 5062 Pls
7423 4402 Pls
6860 3995 Pls
6595 5928 Pls
4713 3500 Pls
5527 5755 Pls
8815 3215 Pls
4346 4267 Pls
7419 5609 Pls
9111 4843 Pls
4924 4325 Pls
6888 5443 Pls
6504 5195 Pls
8455 4890 Pls
5650 4988 Pls
4239 4726 Pls
6513 4578 Pls
9074 4283 Pls
6927 4987 Pls
7863 3721 Pls
8548 4471 Pls
7570 5083 Pls
7506 4831 Pls
5174 4014 Pls
6822 5587 Pls
6845 5177 Pls
8301 4870 Pls
9449 3594 Pls
9981 4485 Pls
5506 4472 Pls
9160 4662 Pls
8739 3625 Pls
5216 4988 Pls
6208 5283 Pls
4497 6448 Pls
7592 5165 Pls
8386 5122 Pls
8244 5767 Pls
5226 4277 Pls
6265 6038 Pls
8820 4600 Pls
5193 4143 Pls
7572 4587 Pls
8631 4449 Pls
6788 4905 Pls
5716 4731 Pls
4470 4668 Pls
4928 4163 Pls
4573 4280 Pls
5506 6130 Pls
5770 5460 Pls
7944 4584 Pls
9953 2465 Pls
5295 3785 Pls
9395 4464 Pls
8152 4486 Pls
7560 5140 Pls
9533 4332 Pls
5575 4783 Pls
6361 4652 Pls
8548 3943 Pls
6379 5021 Pls
7341 4820 Pls
6468 5613 Pls
5134 3846 Pls
7881 4187 Pls
8419 3991 Pls
6575 4467 Pls
5945 4801 Pls
7909 4495 Pls
5608 5853 Pls
5469 5514 Pls
5134 4148 Pls
7367 5270 Pls
7931 4914 Pls
4752 5480 Pls
8686 5597 Pls
6843 5678 Pls
6517 5694 Pls
3658 5216 Pls
5287 3514 Pls
8348 4525 Pls
7890 5140 Pls
6575 5575 Pls
9059 5758 Pls
7608 6353 Pls
8166 4787 Pls
6849 5911 Pls
6027 5248 Pls
5884 5655 Pls
7726 5615 Pls
7336 5033 Pls
7619 5138 Pls
9064 3448 Pls
8880 2717 Pls
6720 5980 Pls
5788 5121 Pls
8352 5344 Pls
7718 5619 Pls
8403 3859 Pls
7450 5457 Pls
6457 6731 Pls
8872 3645 Pls
8711 3730 Pls
3034 3011 Pls
6230 4289 Pls
7837 4564 Pls
8020 4926 Pls
8495 5928 Pls
5016 4294 Pls
8354 5357 Pls
10070 4457 Pls
9128 4547 Pls
8483 5079 Pls
7094 6051 Pls
6257 5231 Pls
9730 4727 Pls
8236 5359 Pls
8478 4600 Pls
8983 4866 Pls
5966 5388 Pls
7827 5111 Pls
4415 4409 Pls
6691 5976 Pls
6541 5141 Pls
5438 4336 Pls
7898 4877 Pls
6014 4894 Pls
6345 6388 Pls
5330 4407 Pls
4974 3735 Pls
6214 4258 Pls
7053 4417 Pls
7567 5904 Pls
4195 3219 Pls
8100 6225 Pls
7459 5507 Pls
6108 5793 Pls
5917 5772 Pls
5488 5974 Pls
7077 5224 Pls
4271 3164 Pls
6943 4375 Pls
6469 4623 Pls
8687 5150 Pls
6831 4884 Pls
6722 5745 Pls
5640 5085 Pls
9759 6214 Pls
8439 4415 Pls
6961 4701 Pls
6125 4786 Pls
5988 5408 Pls
6867 5386 Pls
5123 6051 Pls
8352 4403 Pls
7636 5432 Pls
8658 5364 Pls
4077 4592 Pls
6045 4172 Pls
5260 4753 Pls
4834 3492 Pls
8511 6372 Pls
4169 3581 Pls
5244 4892 Pls
7895 4713 Pls
8899 3849 Pls
4933 4532 Pls
8822 4982 Pls
7645 5622 Pls
4403 2339 Pls
7777 5720 Pls
6006 4839 Pls
8635 3969 Pls
7573 5771 Pls
8897 4930 Pls
9107 3736 Pls
7169 5415 Pls
8082 5172 Pls
6262 5127 Pls
6681 5791 Pls
6019 5134 Pls
6304 4557 Pls
7420 4922 Pls
9449 4033 Pls
7787 4598 Pls
6877 5934 Pls
9607 2932 Pls
5727 5658 Pls
9916 3097 Pls
8490 4056 Pls
7458 5548 Pls
5151 5303 Pls
4539 4089 Pls
9513 5777 Pls
7216 4607 Pls
9659 2604 Pls
5099 5144 Pls
6548 4904 Pls
4090 4008 Pls
4147 4465 Pls
7712 5716 Pls
8264 4817 Pls
5703 4323 Pls
8750 3716 Pls
7200 5328 Pls
4920 4903 Pls
7786 4723 Pls
6085 4925 Pls
6585 5074 Pls
8230 5526 Pls
8339 4862 Pls
7649 5811 Pls
4982 4470 Pls
5427 4869 Pls
7590 5500 Pls
10204 3214 Pls
5714 4644 Pls
7595 4783 Pls
5305 4346 Pls
6290 6791 Pls
4877 4246 Pls
9720 4089 Pls
7603 4637 Pls
4698 3837 Pls
7593 5775 Pls
6350 5620 Pls
4463 5588 Pls
9154 5707 Pls
6447 5794 Pls
9394 5322 Pls
5478 5208 Pls
9231 3722 Pls
7574 4711 Pls
4925 3818 Pls
3685 3869 Pls
5691 4262 Pls
7698 5792 Pls
7306 5510 Pls
6427 5233 Pls
6044 5870 Pls
8152 4322 Pls
5646 5109 Pls
9469 3153 Pls
8079 5444 Pls
9321 5332 Pls
5299 5380 Pls
6592 5858 Pls
5422 5037 Pls
5367 4379 Pls
4641 3966 Pls
4200 3755 Pls
8943 5827 Pls
6106 5100 Pls
6250 4535 Pls
7670 5599 Pls
7384 4141 Pls
4456 4369 Pls
7764 5594 Pls
6728 5720 Pls
5823 5908 Pls
6846 5170 Pls
7771 5292 Pls
7919 4526 Pls
7769 5061 Pls
8703 5157 Pls
7519 5177 Pls
7772 4534 Pls
4192 3860 Pls
5250 5655 Pls
7732 5722 Pls
8901 4850 Pls
6998 4631 Pls
9748 3430 Pls
8355 4852 Pls
7860 5092 Pls
9489 3611 Pls
4997 3909 Pls
6632 5716 Pls
8303 4722 Pls
8516 4771 Pls
8239 5262 Pls
7516 4190 Pls
5017 4609 Pls
6761 5277 Pls
6780 4570 Pls
7275 5726 Pls
4687 4538 Pls
9769 4172 Pls
9056 5746 Pls
9205 4375 Pls
8092 4276 Pls
5165 5337 Pls
7468 5120 Pls
9421 3374 Pls
7412 4928 Pls
7964 4483 Pls
6451 5593 Pls
6255 5082 Pls
7403 5377 Pls
5330 6032 Pls
9268 4127 Pls
8815 3930 Pls
8073 6259 Pls
7073 5173 Pls
6069 5290 Pls
7358 4515 Pls
5166 4505 Pls
5684 5224 Pls
5069 4393 Pls
8548 3975 Pls
9249 4275 Pls
8628 4641 Pls
8541 2801 Pls
5113 5234 Pls
7803 4765 Pls
8907 3145 Pls
7435 5098 Pls
8172 5711 Pls
8897 2566 Pls
5707 3434 Pls
9528 2515 Pls
5155 3714 Pls
5128 3777 Pls
8359 6305 Pls
7645 4808 Pls
8934 5378 Pls
6697 5522 Pls
8545 2882 Pls
6257 4426 Pls
8596 4638 Pls
4922 3946 Pls
6814 4802 Pls
7649 4687 Pls
9227 3543 Pls
7080 5760 Pls
8616 4500 Pls
8353 5255 Pls
4936 4679 Pls
6505 5488 Pls
6174 6244 Pls
6552 5367 Pls
7308 5643 Pls
6342 4989 Pls
5259 4940 Pls
10093 3460 Pls
5149 4768 Pls
7967 5319 Pls
7566 5369 Pls
7936 4853 Pls
5395 5086 Pls
5990 5300 Pls
3384 2692 Pls
4808 4813 Pls
7996 4821 Pls
8842 6148 Pls
4692 3991 Pls
4652 4562 Pls
4324 5470 Pls
7590 5426 Pls
9476 4103 Pls
6825 5508 Pls
5337 6076 Pls
8825 3896 Pls
9138 4321 Pls
5976 4900 Pls
5572 4978 Pls
7707 4664 Pls
7858 5990 Pls
5588 5582 Pls
4345 4152 Pls
6060 4682 Pls
1.000 UP
0.500 UL
LT1
LC1 setrgbcolor
0.00 0.00 1.00 C 5246 5972 Crs
6816 5332 Crs
6088 4694 Crs
7778 4853 Crs
6787 5874 Crs
5256 2997 Crs
7741 5181 Crs
8779 5188 Crs
5793 4750 Crs
4431 3935 Crs
6971 5586 Crs
8574 4876 Crs
4452 2029 Crs
9489 4020 Crs
8198 3956 Crs
8233 4399 Crs
7735 5948 Crs
5746 5068 Crs
8825 3964 Crs
5696 4614 Crs
5639 4257 Crs
8752 4150 Crs
7974 4069 Crs
9985 3400 Crs
8196 4652 Crs
7732 4740 Crs
5513 4154 Crs
5951 5664 Crs
8216 5718 Crs
6877 4372 Crs
3807 3259 Crs
7384 5132 Crs
6089 5816 Crs
5976 5661 Crs
8872 3692 Crs
8834 5547 Crs
7340 5928 Crs
6486 6028 Crs
7528 6073 Crs
4943 3844 Crs
8259 5056 Crs
8812 4552 Crs
9278 4705 Crs
6783 4695 Crs
7197 4840 Crs
7661 4815 Crs
7051 4631 Crs
5200 4270 Crs
10351 3067 Crs
7870 4989 Crs
8698 3826 Crs
7783 4598 Crs
7374 5689 Crs
7227 5240 Crs
7385 6263 Crs
8793 3726 Crs
5704 5099 Crs
6475 5023 Crs
5635 3776 Crs
5077 4991 Crs
5621 4155 Crs
5316 4262 Crs
8810 5420 Crs
7072 4691 Crs
6717 4860 Crs
6500 4384 Crs
3659 4461 Crs
6193 5712 Crs
5332 5367 Crs
5288 3654 Crs
4714 4429 Crs
6921 4253 Crs
7507 4710 Crs
6180 5603 Crs
7471 5100 Crs
8799 5485 Crs
8237 4404 Crs
5581 5093 Crs
8507 2892 Crs
6932 5030 Crs
6384 5490 Crs
7621 5255 Crs
5613 5826 Crs
7414 6565 Crs
5268 3948 Crs
4444 3856 Crs
9306 3992 Crs
7577 5223 Crs
4808 5274 Crs
5605 5322 Crs
7797 5872 Crs
8128 5722 Crs
6868 4722 Crs
8595 5329 Crs
9581 2419 Crs
9971 2095 Crs
7965 5655 Crs
5790 5103 Crs
3850 4058 Crs
5420 5113 Crs
8205 4807 Crs
6528 5298 Crs
7286 4278 Crs
9135 4133 Crs
5438 5098 Crs
8386 4679 Crs
7739 4656 Crs
6682 4447 Crs
7702 4052 Crs
8147 5162 Crs
4405 2999 Crs
5282 4784 Crs
6619 5434 Crs
7799 5602 Crs
6750 4419 Crs
6727 6192 Crs
6535 5398 Crs
5320 3956 Crs
5981 4117 Crs
7866 3602 Crs
7212 3960 Crs
7517 6121 Crs
5695 6117 Crs
9330 3670 Crs
9023 3229 Crs
8896 4044 Crs
5836 4844 Crs
6003 4749 Crs
4093 4638 Crs
4888 3589 Crs
5719 5841 Crs
6965 5047 Crs
4402 3435 Crs
8258 5030 Crs
3970 4982 Crs
7313 3672 Crs
5582 5138 Crs
7470 5220 Crs
4944 1972 Crs
7712 4595 Crs
5615 4323 Crs
5990 5903 Crs
4604 4951 Crs
3871 2039 Crs
6310 6626 Crs
8289 5342 Crs
5259 5059 Crs
3851 2667 Crs
6198 3726 Crs
5059 5042 Crs
7690 6392 Crs
7283 4788 Crs
5593 4738 Crs
8031 5285 Crs
8446 4460 Crs
5369 5053 Crs
4423 3395 Crs
7504 5817 Crs
4884 4257 Crs
6220 5061 Crs
9752 3608 Crs
8773 3576 Crs
8338 5361 Crs
5516 4973 Crs
5318 4464 Crs
3978 4048 Crs
5970 5043 Crs
8388 4181 Crs
7677 4942 Crs
3764 3610 Crs
6766 4906 Crs
8084 4465 Crs
7008 4504 Crs
6182 4495 Crs
7887 4486 Crs
5431 5342 Crs
8832 3161 Crs
8860 3602 Crs
7071 4832 Crs
8125 5098 Crs
5118 4690 Crs
8633 3734 Crs
8498 3354 Crs
9102 4485 Crs
9208 5209 Crs
7425 5239 Crs
5381 5912 Crs
5878 5204 Crs
6511 4092 Crs
5164 4204 Crs
9198 5103 Crs
7638 5571 Crs
5162 3852 Crs
8407 5296 Crs
5718 6424 Crs
6218 4928 Crs
8835 5224 Crs
6466 3836 Crs
5787 4937 Crs
8243 3880 Crs
6224 5609 Crs
5887 6258 Crs
8992 4745 Crs
7922 5747 Crs
7945 3893 Crs
7035 5671 Crs
5987 6409 Crs
7323 5917 Crs
8740 3491 Crs
8870 4911 Crs
4770 5980 Crs
9128 5894 Crs
4163 3288 Crs
4712 2470 Crs
8547 2922 Crs
5678 6138 Crs
7087 5047 Crs
5941 5691 Crs
7487 4764 Crs
6816 4773 Crs
5197 3997 Crs
5627 2886 Crs
5773 5781 Crs
7997 5216 Crs
7083 5392 Crs
5256 6461 Crs
5173 3790 Crs
5893 4532 Crs
5071 4247 Crs
7514 5397 Crs
5302 4605 Crs
8965 3764 Crs
6283 4914 Crs
6160 5268 Crs
8640 4907 Crs
6687 5346 Crs
9951 6144 Crs
7290 5625 Crs
4723 3618 Crs
5902 5678 Crs
6496 5223 Crs
5159 5361 Crs
6719 5007 Crs
6414 4231 Crs
5970 6011 Crs
8517 3922 Crs
5828 4916 Crs
7590 4391 Crs
7690 4252 Crs
7175 4974 Crs
1.000 UP
0.500 UL
LTb
LCb setrgbcolor
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
